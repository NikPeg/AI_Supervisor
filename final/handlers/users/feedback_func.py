import asyncio

from aiogram import types
from aiogram.dispatcher import FSMContext

from config import admin_id
from database.feedback_db import add_new_feedback
from database.feedback_db import delete_user_from_feedback, get_all_feed_back_users
from keyboards.keyboards import feedback_markup
from loader import bot, dp
from .start_command import UserState


@dp.callback_query_handler(text='give_feedback', state="*")
async def get_feedback_handler(call: types.CallbackQuery):
    await call.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –í–∞—à –æ—Ç–∑—ã–≤:')
    await UserState.feedback.set()


@dp.message_handler(state=UserState.feedback)
async def feedback_handler(message: types.Message, state: FSMContext):
    await state.finish()
    add_new_feedback(message.chat.id, message.text)
    await bot.send_message(admin_id,
                           f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} c –Ω–∏–∫–æ–º @{message.chat.username} –ø—Ä–∏—Å–ª–∞–ª —Ñ–∏–¥–±–µ–∫ {message.text}")


async def start_feed_back():
    all_users = get_all_feed_back_users()
    for user in all_users:
        try:
            await bot.send_message(user[0], text='ü•∫–ù–∞–º –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞ –í–∞—à–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å, —á—Ç–æ–±—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ!'
                                                 '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –æ—Ç–∑—ã–≤ –æ –±–æ—Ç–µ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ.'
                                                 '–ß—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –±–æ—Ç–µ? –ß—Ç–æ —Å—Ç–æ–∏—Ç –∏—Å–ø—Ä–∞–≤–∏—Ç—å? –ö–∞–∫–∏–µ –µ—â–µ —Ñ—É–Ω–∫—Ü–∏–∏ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –≤–∏–¥–µ—Ç—å –≤ –±–æ—Ç–µ?'
                                   , reply_markup=feedback_markup())
            delete_user_from_feedback(user[0])
            await asyncio.sleep(0.2)
        except:
            continue
    await asyncio.sleep(8640)
